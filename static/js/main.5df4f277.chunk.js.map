{"version":3,"sources":["actions/actionTypes.js","actions/posts.js","components/PostsList.js","components/App.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["UPDATE_POSTS","fetchPosts","dispatch","fetch","then","response","json","data","console","log","type","posts","PostsList","this","props","className","map","post","src","alt","name","address","street","company","bs","length","placeholder","id","Component","App","alg","React","connect","state","combineReducers","action","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAaA,EAAe,eCCrB,SAASC,IACd,OAAO,SAACC,GAMNC,MADW,8CAERC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLC,QAAQC,IAAI,WAAYF,GACxBL,EAMC,CACLQ,KAAMV,EACNW,MARyBJ,Q,WCmDdK,E,4JA7DX,WAAU,IACCD,EAASE,KAAKC,MAAdH,MACP,OACI,qBAAKI,UAAU,YAAf,SACDJ,EAAMK,KAAI,SAACC,GAAD,OACT,qBAAKF,UAAU,eAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEG,IAAI,wDACJC,IAAI,aAEN,gCACE,uBAAMJ,UAAU,cAAhB,UAA+BE,EAAKG,KAApC,OACA,sBAAML,UAAU,YAAhB,gCAGJ,qBAAKA,UAAU,eAAf,SAA+BE,EAAKI,QAAQC,SAC5C,sBAAKP,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACEG,IAAI,wDACJC,IAAI,eAEN,+BAAOF,EAAKM,QAAQC,GAAGC,YAEzB,sBAAKV,UAAU,qBAAf,UACE,qBACEG,IAAI,wDACJC,IAAI,mBAEN,+BAAOF,EAAKI,QAAQC,OAAOG,eAG/B,qBAAKV,UAAU,mBAAf,SACE,uBAAOW,YAAY,6BAGrB,qBAAKX,UAAU,qBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,sBAAhB,kBACA,sBAAMA,UAAU,oBAAhB,0BACA,sBAAMA,UAAU,qBAAhB,mBAEF,qBAAKA,UAAU,uBAAf,oCAxC2BE,EAAKU,a,GAN5BC,aCIlBC,E,uKACJ,WACEhB,KAAKC,MAAMZ,SAASD,O,oBAGtB,WAAU,IACAU,EAAUE,KAAKC,MAAfH,MACR,OACE,gCACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEG,IAAI,4DACJY,IAAI,WAGR,sBAAKf,UAAU,mBAAf,UACE,qBACEA,UAAU,cACVG,IAAI,sDACJC,IAAI,gBAEN,uBAAOO,YAAY,WACnB,sBAAKX,UAAU,iBAAf,UACE,6BACE,qBAAIA,UAAU,qBAAd,UACE,qBACEG,IAAI,wDACJC,IAAI,WAEN,iDAGJ,6BACE,qBAAIJ,UAAU,qBAAd,UACE,qBACEG,IAAI,wDACJC,IAAI,WAEN,uDAKR,sBAAKJ,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBACEG,IAAI,wDACJS,GAAG,UACHR,IAAI,YAEN,+CAEF,qBAAKJ,UAAU,YAAf,SACA,+BACE,wCACA,yCACA,qDAMN,cAAC,EAAD,CAAWJ,MAAOA,W,GA/DRoB,IAAMH,WA6ETI,mBARf,SAAyBC,GACvB,MAAO,CACLtB,MAAOsB,EAAMtB,SAMFqB,CAAyBH,G,gCCjFzBK,cAAgB,CAC3BvB,MCFW,WAAoC,IAArBsB,EAAoB,uDAAZ,GAAIE,EAAQ,uCAChD,OAAQA,EAAOzB,MACb,KAAKV,EACH,OAAOmC,EAAOxB,MAChB,QACE,OAAOsB,MCAb,IAAMG,ECAMC,YAAYC,EAAQC,YAAgBC,IAAMC,MDCtDC,IAASC,OACL,eAAC,IAAD,CAAUP,MAAOA,EAAjB,UACG,cAAC,IAAMQ,WAAP,UACG,cAAE,EAAF,MAFN,OAKFC,SAASC,eAAe,W","file":"static/js/main.5df4f277.chunk.js","sourcesContent":["export const UPDATE_POSTS = 'UPDATE_POSTS';\r\n","import { UPDATE_POSTS } from './actionTypes';\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    // const url = 'https://jsonplaceholder.typicode.com/posts';\r\n    // const url =    'https://developers.facebook.com/docs/graph-api/reference/page-post/'\r\n    //  const url =  'http://codeial.com:8000/api/v2/posts/?page=e1&limit=1';\r\n    // const url = 'https://api.github.com/users';\r\n    const url ='https://jsonplaceholder.typicode.com/users';\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('response', data);\r\n        dispatch(updatePosts(data));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PostsList extends Component {\r\n    render() {\r\n        const {posts} = this.props;\r\n        return (\r\n            <div className=\"post-list\">\r\n          {posts.map((post) => (\r\n            <div className=\"post-wrapper\" key={post.id}>\r\n              <div className=\"post-header\">\r\n                <div className=\"post-avatar\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-pic\"\r\n                  />\r\n                  <div>\r\n                    <span className=\"post-author\">{post.name} </span>\r\n                    <span className=\"post-time\">a minute ago</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"post-content\">{post.address.street}</div>\r\n                <div className=\"post-actions\">\r\n                  <div className=\"post-like\">\r\n                    <img\r\n                      src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                      alt=\"likes-icon\"\r\n                    />\r\n                    <span>{post.company.bs.length}</span>\r\n                  </div>\r\n                  <div className=\"post-comments-icon\">\r\n                    <img\r\n                      src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                      alt=\"commetns-icons\"\r\n                    />\r\n                    <span>{post.address.street.length}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"post-comment-box\">\r\n                  <input placeholder=\"Start typing a comment\" />\r\n                </div>\r\n\r\n                <div className=\"post-comments-list\">\r\n                  <div className=\"post-comments-item\">\r\n                    <div className=\"post-comments-header\">\r\n                      <span className=\"post-comment-author\">Bill</span>\r\n                      <span className=\"post-comment-time\">a minute ago</span>\r\n                      <span className=\"post-comment-likes\">32</span>\r\n                    </div>\r\n                    <div className=\"post-comment-content\">\r\n                        Radom comment\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n PostsList.propTypes = {\r\n   posts: PropTypes.array.isRequired\r\n }\r\nexport default PostsList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchPosts } from '../actions/posts';\nimport posts from '../reducers/posts';\nimport { PostsList } from './';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n  }\n\n  render() {\n    const { posts } = this.props;\n    return (\n      <div>\n        <nav className=\"nav\">\n          <div className=\"left-div\">\n            <img\n              src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\n              alg=\"logo\"\n            />\n          </div>\n          <div className=\"search-container\">\n            <img\n              className=\"search-icon\"\n              src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\n              alt=\"search-icon\"\n            />\n            <input placeholder=\"Search\" />\n            <div className=\"search-results\">\n              <ul>\n                <li className=\"search-results-row\">\n                  <img\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                    alt=\"avatar\"\n                  />\n                  <sapn>John Doe</sapn>\n                </li>\n              </ul>\n              <ul>\n                <li className=\"search-results-row\">\n                  <img\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                    alt=\"avatar\"\n                  />\n                  <sapn>John Doe</sapn>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"right-nav\">\n            <div className=\"user\">\n              <img\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                id=\"user-dp\"\n                alt=\"user-dp\"\n              />\n              <span>John Doe</span>\n            </div>\n            <div className=\"nav-links\">\n            <ul>\n              <li>Log in</li>\n              <li>Log out</li>\n              <li>Register</li>\n            </ul>\n          </div>\n          </div>\n         \n        </nav>\n        <PostsList posts={posts} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n  };\n}\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n    posts,\r\n})","import { UPDATE_POSTS } from '../actions/actionTypes';\r\n\r\nexport default function posts(state = [], action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport {configureStore} from './store';\n\nconst store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n       <React.StrictMode>\n          < App />\n       </React.StrictMode>,\n     </Provider>,\n  document.getElementById('root')\n);\n\n\n","import {createStore,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport reducer from '../reducers';\r\nlet store;\r\n  \r\nexport function configureStore() {\r\n    store = createStore(reducer,applyMiddleware(thunk,logger));\r\n    return store;\r\n}"],"sourceRoot":""}